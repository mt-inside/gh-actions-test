name: Generate GH Release

# fixme: running on non-tag pushes, getting confused
on:
  push:
    tags: # all tags. Including lightweight (it's convention to make GH Releases on annotated tags, but it supports both)

# Note the commits operated on are based from GITHUB_REF, but I think we could just use `git describe` becuase I'm sure the repo is checked out to that point. eg
#   git for-each-ref --count=1 --sort='-*authordate' --format='%(*refname:short)' 'refs/tags'
#   git describe --abbrev=0 --tags $(git describe --tags --abbrev=0)^

jobs:
  make_release:
    name: Make Release
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Get current tag
        id: get_current_tag
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: Get previous tag
        id: get_previous_tag
        run: echo "::set-output name=tag::$(git describe --abbrev=0 --tags ${GITHUB_REF#refs/tags/}^)" # gets the tag before the given ref, which by definition is the most recent tag, which triggered us. --tags includes lightweight tags, because we'll get triggered for them so shouldn't ignore them or we'll get counterintuitive results

      - name: Make changelog
        id: changelog
        uses: mt-inside/generate-changelog@05ab004
        with:
          new: ${{ steps.get_current_tag.outputs.tag }}
          old: ${{ steps.get_previous_tag.outputs.tag }}
        env:
          GITHUB_AUTH: ${{ github.token }} # Takes via env cause it's a thin wrapper of lerna, which is a bit shit. Re-write in TS and monads

      - name: trace
        env:
          MSG: ${{ steps.changelog.outputs.changelog }}
        run: echo "$MSG"

      - name: Make release
        uses: mt-inside/make-release@ed9defe
        with:
          tag: ${{ steps.get_current_tag.outputs.tag }}
          body: ${{ steps.changelog.outputs.changelog }}
          token: ${{ github.token }}
